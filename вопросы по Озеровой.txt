Вопросы по лекции 1:
1. Какие еще агрегирующие функции есть в MySQL, помимо Sum(), Count(), MIN(), MAX(), AVG(), GROUP_CONCAT()
2. Count(*) считает все сторки, Count(author) считает только Not Null значения. 
Count ( distinct author) - считает только  not Null значения и удаляет дубликаты
Count( all author) - считает только Not Null значения  и дубликаты
3. Есть ли в MySqL group by grouping sets (a,b), group bн cube, group by rollup, string_agg? array_agg?
4. В PostgreSQL при выводе кучи столбцов и группировке можно сделать только группировку по первичному ключу. Например,
Select book_id, author, title, sum(amount) from book group by book_id. 
А в MySQL так можно или нужно добавлять в группировку все неагрегированные столцы?
5. Ф-я filter() для использования вместе с агрегирующими ф-ями? Типа select author, sum(amount) filter (where amount <5)? 
Можно отдельно прописать условие для каждой агрегации в отдельности. в MySQL - аналог SUM(CASE WHEN <condition> THEN <expression> END)
6 Касательно limit: в PostgreSQL вместо limit 10 можно использовать fetch first 10 rows only или 
в зависимости от версии, fetch first 10 rows with ties. 
Это важно для случаев, когда в таблицу есть несколько записей с одинаковыми значениями.
7. Есть ли ф-я offset(50) ( т.е нам нужно пропустить 50 строк и брать нгачиная с 51-й
8. Есть ли в MySQL distinct on()? Когда select distinct author, title - отбор уникальных записей по двум полям.
Если select distinct on (author)  author, title - уникальность только по автору, 
title - в зависимости от сортировки - либо первые, либо последние
9. Собственные типы данных в MySQL? Приведение типов ( cast?))Есть.
10. в MySQL length вернет к-во байт в строке, CHARACYER_LENGTH-длину в символах
11. Вложенный запрос: Если возвращает 1 значение - исп. в Select, Where, Having. Если столбец - исп. в Where, from. Если таблица - From 
12. Запросы на корректировку с использованием табличных выражений: В запросах создания таблицы  и 
добавления записей cte пишется ПОСЛЕ Create table и Insert, 
в запросах обновления и удаления -ДО Update и ДО Delete. Можно пример запроса удаления с использованием cte и Using?Из слайда непонятно.
13
14 В mySQL есть ф-я COALESCE(x, y) = (CASE WHEN x IS NOT NULL THEN x ELSE y END)

 В презентации к лекуии 9 опечатка на слайде 69 . Должно быть не ON DELETE RESTRICT, а OM UPDATE RESTRICT
15. Лекция 8 . Нормализация отношений. В "Презентации+к+лекции+(7)" - опечатка в слайде 29. В таблице должна быть не атрибут brand и значения атрибутов - брэнды, 
а атрибут model и значения атрибутов - модели телефонов

16. Вопрос по слайду 30. Можем ли мы считать, что скидка sale зависит от ключа brand_id нетранзитивно? 
Вдруг в таблице появятся еще брэнды, на которые тоже будет скидка 10%? 
Тогда скидка будет нетранзитивно зависеть от брэнда и транзитивно от ключа, а это противоречит определению 3НФ?
17. вопрос по слайду 31 (model_id, model,price) Там, похоже, опечатка - значения ключа model_id разные, 
а значения атрибута  model - одинаковые? В model, наверно, должны быть написаны не брэнды, а модели телефонов?
18 вопрос по слайду 31 -продолжение. price зависит от model, а model - от ключа model_id. 
Т.е. price транзитивно зависит от ключа ( как и в случае со скидкой). Разве это не противоречит определению 3НФ?
19. Слайд 38.Выглядит так, что shop зависит от city, а city - от ключа. Т.е. shop транзитивнео зависит от ключа? 
Это противоречит определение 3НФ?
20. ЛЕКЦИЯ 9. Проектирование базы данных методом декомпозиции -"Презентация+к+лекции+(8)(1)"
В библиотеке на Одине Сразу после презы по нормализации отношений ("Презентация+к+лекции+(7)(1)") идет 
Описание процессов обработки данных ("Презентация+к+лекции+(7)"
21. ЛЕКЦИЯ 9. Проектирование базы данных методом декомпозиции. 12:23 или Слайд 18. Почему при проектировании мы оставляем good_name в delivery?
Разве не может быть, что один и тот же good_name поставляется несколькими suppliers? его надо в отдельную таблицу извлекать. 
Более того, один и тот же good_name теоретически может быть различного типа... 
И то, что supplier и supplier_address в одной таблице - плохо. Может измениться адрес у поставщика - это раз. может измениться название - это 2
Нужно разносить!
22. Самостоятельное задание к Лекции 9. В каком виде делать? Просто дамп написать?
23. Слайд 38. ПОчему в последней таблице ключ mark_id, а не result_id?
24. Слайд 39. Почему нет отношения student_group? и ключ mark_id, а не result_id?
25. А какой вариант декомпозиции из приведенных лучше? 

26 Проверочное задание "Декомпозиция отношений" - вопросы 6 и 8 - нет технических средств для ответа
( чек-баттонов, радиобаттонов, полей для ввода последовательности шагов и тюд